{"ast":null,"code":"import { INCREASE_ONE, DECREASE_ONE, INCREASE_FIVE } from \"../action/actionType\";\nconst initialState = 0;\n\n// export const counterReducer = (state = { counter: initialState }, action) => {\n//   if (action.type === INCREASE_ONE) {\n//     return {\n//       counter: state.counter + 1\n//     };\n//   } else if (action.type === INCREASE_FIVE) {\n//     return {\n//       counter: state.counter + action.payload\n//     }\n//   } else if (action.type === DECREASE_ONE) {\n//     return {\n//       counter: state.counter - 1\n//     };\n//   } else {\n//     return state;\n//   }\n// };\n\nexport const counterReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    counter: initialState\n  };\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  if (action.type === INCREASE_ONE) {\n    return state.counter + 1;\n  } else if (action.type === INCREASE_FIVE) {\n    return state.counter + action.payload;\n  } else if (action.type === DECREASE_ONE) {\n    return state.counter - 1;\n  } else {\n    return state;\n  }\n};","map":{"version":3,"names":["INCREASE_ONE","DECREASE_ONE","INCREASE_FIVE","initialState","counterReducer","state","arguments","length","undefined","counter","action","type","payload"],"sources":["/Users/kimdonggu/Downloads/01-starting-project/src/redux/reducer/counterReducer.js"],"sourcesContent":["import { INCREASE_ONE, DECREASE_ONE, INCREASE_FIVE } from \"../action/actionType\";\n\nconst initialState = 0;\n\n// export const counterReducer = (state = { counter: initialState }, action) => {\n//   if (action.type === INCREASE_ONE) {\n//     return {\n//       counter: state.counter + 1\n//     };\n//   } else if (action.type === INCREASE_FIVE) {\n//     return {\n//       counter: state.counter + action.payload\n//     }\n//   } else if (action.type === DECREASE_ONE) {\n//     return {\n//       counter: state.counter - 1\n//     };\n//   } else {\n//     return state;\n//   }\n// };\n\nexport const counterReducer = (state = { counter: initialState }, action) => {\n  if (action.type === INCREASE_ONE) {\n    return state.counter + 1\n  } else if (action.type === INCREASE_FIVE) {\n    return state.counter + action.payload\n  } else if (action.type === DECREASE_ONE) {\n    return state.counter - 1\n  } else {\n    return state;\n  }\n};\n"],"mappings":"AAAA,SAASA,YAAY,EAAEC,YAAY,EAAEC,aAAa,QAAQ,sBAAsB;AAEhF,MAAMC,YAAY,GAAG,CAAC;;AAEtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,cAAc,GAAG,SAAAA,CAAA,EAA+C;EAAA,IAA9CC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG;IAAEG,OAAO,EAAEN;EAAa,CAAC;EAAA,IAAEO,MAAM,GAAAJ,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EACtE,IAAIE,MAAM,CAACC,IAAI,KAAKX,YAAY,EAAE;IAChC,OAAOK,KAAK,CAACI,OAAO,GAAG,CAAC;EAC1B,CAAC,MAAM,IAAIC,MAAM,CAACC,IAAI,KAAKT,aAAa,EAAE;IACxC,OAAOG,KAAK,CAACI,OAAO,GAAGC,MAAM,CAACE,OAAO;EACvC,CAAC,MAAM,IAAIF,MAAM,CAACC,IAAI,KAAKV,YAAY,EAAE;IACvC,OAAOI,KAAK,CAACI,OAAO,GAAG,CAAC;EAC1B,CAAC,MAAM;IACL,OAAOJ,KAAK;EACd;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}